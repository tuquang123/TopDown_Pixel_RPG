using UnityEngine;

public class EnemyAI : MonoBehaviour
{
    private static readonly int Property = Animator.StringToHash("1_Move");
    private static readonly int Property1 = Animator.StringToHash("2_Attack");
    [SerializeField] private float moveSpeed = 3f;  // T·ªëc ƒë·ªô di chuy·ªÉn
    [SerializeField] private float attackRange = 1.5f;  // T·∫ßm ƒë√°nh
    [SerializeField] private float detectionRange = 5f; // T·∫ßm ph√°t hi·ªán
    [SerializeField] private float attackCooldown = 1f; // Th·ªùi gian gi·ªØa c√°c ƒë√≤n t·∫•n c√¥ng

    private Transform player;
    private Animator anim;
    private float lastAttackTime;

    void Start()
    {
        player = GameObject.FindGameObjectWithTag("Player").transform; // T√¨m ng∆∞·ªùi ch∆°i theo tag
        anim = GetComponentInChildren<Animator>();
    }

    void Update()
    {
        if (player == null) return;

        float distanceToPlayer = Vector2.Distance(transform.position, player.position);

        if (distanceToPlayer <= detectionRange) // N·∫øu ng∆∞·ªùi ch∆°i trong t·∫ßm ph√°t hi·ªán
        {
            if (distanceToPlayer > attackRange)
            {
                MoveTowardsPlayer();
            }
            else
            {
                AttackPlayer();
            }
        }
        else
        {
            anim.SetBool(Property, false); // ƒê·ª©ng y√™n n·∫øu kh√¥ng th·∫•y ng∆∞·ªùi ch∆°i
        }
    }

    void MoveTowardsPlayer()
    {
        // N·∫øu ƒëang t·∫•n c√¥ng th√¨ kh√¥ng di chuy·ªÉn
        if (Time.time - lastAttackTime < attackCooldown)
        {
            anim.SetBool(Property, false);
            return;
        }

        anim.SetBool(Property, true);
        transform.position = Vector2.MoveTowards(transform.position, player.position, moveSpeed * Time.deltaTime);

        // Xoay m·∫∑t theo h∆∞·ªõng ng∆∞·ªùi ch∆°i
        if (player.position.x > transform.position.x)
        {
            transform.rotation = Quaternion.Euler(0, 0, 0); // H∆∞·ªõng ph·∫£i
        }
        else
        {
            transform.rotation = Quaternion.Euler(0, 180, 0); // H∆∞·ªõng tr√°i
        }
    }


    void AttackPlayer()
    {
        if (Time.time - lastAttackTime >= attackCooldown)
        {
            anim.SetBool(Property, false); // D·ª´ng di chuy·ªÉn khi ƒë√°nh
            anim.SetTrigger(Property1);
            lastAttackTime = Time.time;
        }
    }

    // üîπ V·∫Ω Gizmos trong Scene View
    void OnDrawGizmosSelected()
    {
        // M√†u xanh: T·∫ßm ph√°t hi·ªán
        Gizmos.color = Color.green;
        Gizmos.DrawWireSphere(transform.position, detectionRange);

        // M√†u ƒë·ªè: T·∫ßm t·∫•n c√¥ng
        Gizmos.color = Color.red;
        Gizmos.DrawWireSphere(transform.position, attackRange);
    }
}